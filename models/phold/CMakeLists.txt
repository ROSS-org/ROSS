INCLUDE_DIRECTORIES(${ROSS_BINARY_DIR})
IF(USE_DAMARIS)
    INCLUDE_DIRECTORIES(${DAMARIS_DIR}/include)
ENDIF(USE_DAMARIS)
IF(BGPM)
	INCLUDE_DIRECTORIES(${ROSS_SOURCE_DIR} ${BGPM_LIB})
ELSE(NOT(BGPM))
	INCLUDE_DIRECTORIES(${ROSS_SOURCE_DIR})
ENDIF(BGPM)

SET(phold_srcs
phold.c		phold.h)


ADD_EXECUTABLE(phold ${phold_srcs})
ADD_EXECUTABLE(phold_test ${phold_srcs})

IF(BGPM)
	TARGET_LINK_LIBRARIES(phold ROSS imp_bgpm m)
	TARGET_LINK_LIBRARIES(phold_test ROSS imp_bgpm m)
ELSE(NOT(BGPM))
    IF(USE_DAMARIS)
        #SET(DAMARIS_LINKER_FLAGS "-rdynamic -L/${DAMARIS_DIR}/lib -Wl,--whole-archive,-ldamaris,--no-whole-archive -lxerces-c -lboost_filesystem -lboost_system -lboost_date_time -lstdc++ -lpthread -lmpi_cxx -lrt -ldl")
        SET(DAMARIS_LINKER_FLAGS "-rdynamic -L/${DAMARIS_DIR}/lib -Wl,--whole-archive,-ldamaris,--no-whole-archive -lxerces-c -lboost_filesystem -lboost_system -lboost_date_time -lstdc++ -lpthread -lmpi_cxx -lrt -ldl -L/$ENV{HOME}/visit/visit2.12.1/src/lib -lsimV2")
        set(VTK_DIR "/home/rossc3/vtk-bin")
        find_package(VTK REQUIRED)
        MESSAGE("vtk use ${VTK_USE_FILE}")
        INCLUDE(${VTK_USE_FILE})
        TARGET_LINK_LIBRARIES(phold ROSS ${DAMARIS_LINKER_FLAGS} ${DAMARIS_LIB} ROSS_Damaris ${VTK_LIBRARIES} m)
        TARGET_LINK_LIBRARIES(phold_test ROSS ${DAMARIS_LINKER_FLAGS} ${DAMARIS_LIB} ROSS_Damaris ${VTK_LIBRARIES} m)
    ELSE(NOT(USE_DAMARIS))
        TARGET_LINK_LIBRARIES(phold ROSS m)
        TARGET_LINK_LIBRARIES(phold_test ROSS m)
    ENDIF(USE_DAMARIS)
ENDIF(BGPM)

ROSS_TEST_SCHEDULERS(phold)
ROSS_TEST_INSTRUMENTATION(phold)

SET_TARGET_PROPERTIES(phold_test PROPERTIES COMPILE_DEFINITIONS TEST_COMM_ROSS)
ROSS_TEST_SCHEDULERS(phold_test)
ROSS_TEST_INSTRUMENTATION(phold_test)
