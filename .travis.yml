dist: trusty
sudo: required
language: cpp
compiler:
  - clang
# Change this to your needs
notifications:
  email:
    on_success: change
    on_failure: always
env:
 - secure: "BbB1KVY0Yb6DJwxdfFDF1PJwSx9euNfNX94oDKftiH8LE0nEzfS6xZc2sBkWTWOThHml9ttBkDIx/NhxEThOjyVcX6uv4kibP6moV5EqxqC+kLoZSEZnVuAdTJfGRKBdzmRp66R5a/GiMzzz/F3+smdVFMb6XR06sPQa5TQZjEc="
git:
  submodules: false
branches:
  only:
  - master
  - develop
before_install:
 - sudo apt-add-repository -y ppa:libreoffice/libreoffice-4-2
 - sudo apt-get update -q
 - sudo apt-get install -y -qq lcov curl doxygen graphviz
 - lscpu
 - CLOCK_SPEED=`lscpu | grep "MHz" | awk '{print $3*1000*1000}'`
 - echo $CLOCK_SPEED
 - sh ./conf/travis-install-mpi.sh mpich2
 - mpirun --version
script:
  - mkdir cxx-build && cd cxx-build
  - cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_C_FLAGS="-Wall -Wextra" ..
  - export MPICH_CC=clang++
  - make
  - unset MPICH_CC
  - cd ..
  - mkdir install
  - mkdir release && cd release
  - MPICH_CC=clang cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=../install -DCMAKE_C_FLAGS="-Wall -Wextra" -DROSS_BUILD_MODELS=ON ..
  - make
  - CTEST_OUTPUT_ON_FAILURE=1 make test
  - make install
  - cd ..
  - mkdir build-gtod && cd build-gtod
  - MPICH_CC=clag cmake -DCOVERALLS=ON -DCMAKE_BUILD_TYPE=Debug -DCMAKE_C_FLAGS="-Wall -Wextra" -DROSS_BUILD_MODELS=ON -DROSS_CLOCK_OVERRIDE=ON ..
  - make
  - CTEST_OUTPUT_ON_FAILURE=1 ctest -R SCHED
  - make coveralls
  - cd ..
  - mkdir build && cd build
  - MPICH_CC=clang cmake -DCOVERALLS=ON -DCMAKE_BUILD_TYPE=Debug -DCMAKE_C_FLAGS="-Wall -Wextra" -DROSS_BUILD_MODELS=ON ..
  - make
  - CTEST_OUTPUT_ON_FAILURE=1 make test
  - make coveralls
  - cd ..
  - mkdir build2 && cd build2
  - MPICH_CC=clang cmake -DAVL_TREE=OFF -DCOVERALLS=ON -DCMAKE_BUILD_TYPE=Debug -DCMAKE_C_FLAGS="-Wall -Wextra" -DROSS_BUILD_MODELS=ON ..
  - make
  - CTEST_OUTPUT_ON_FAILURE=1 make test
  - make coveralls
  - cd ..
  - # only run CODES integration for master branch
  - if [ $TRAVIS_BRANCH != "master" ]; then
  -   return
  - fi
  - cd ..
  - git clone --depth=1 --branch=master https://github.com/CODES-org/CODES.git CODES-org/CODES.git
  - cd CODES-org/CODES
  - ./prepare.sh
  - mkdir build && cd build
  -../configure PKG_CONFIG_PATH=../../ROSS-org/ROSS/install/lib/pkgconfig
  - make
  - make tests
  - make check
  - # prep for docs deployment
  - cd ../../../ROSS-org/ROSS
  - mkdir doc-build && cd doc-build
  - cmake -DROSS_BUILD_DOXYGEN=ON -DDOXYGEN_CALLER_GRAPHS=ON -DDOXYGEN_CALL_GRAPHS=ON ..
  - make apidoc
after_success:
  - bash <(curl -s https://codecov.io/bash)
deploy:
  provider: pages: git
  edge: true
  token: $GH_TOKEN
  repo: ross-org/ross-org.github.io
  branch: master
  name: ROSS bot
  email: ross.gh.robot@gmail.com
  local_dir: docs/html
